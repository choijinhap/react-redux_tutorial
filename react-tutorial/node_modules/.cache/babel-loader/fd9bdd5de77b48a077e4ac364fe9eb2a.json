{"ast":null,"code":"var _jsxFileName = \"/Users/choijinhap/Workspace/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { throwStatement } from '@babel/types'; // class Square extends React.Component {\n//     constructor(props){\n//         super(props);\n//     }\n//     render() {\n//       return (\n//         //  <button className=\"square\" onClick={function(){alert( \"click\"+this.props.value );}}> \n//         //  </button>\n//         // fucntion과 화살표함수의 this가 다르다 \n//         <button \n//         className=\"square\" \n//         onClick={() => {this.props.onClick()}}\n//         >\n//           {this.props.value}\n//         </button>\n//       );\n//     }\n//   }\n//function component로 바꾸기\n//state를 가질 필요가 없는 component는 function으로 정의하면 훨씬 간결하다.\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = this.state.history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calcuateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = this.state.history[history.length - 1];\n    const winner = calcuateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner : ' + winner;\n    } else {\n      status = 'Next player : ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction calcuateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/choijinhap/Workspace/my-app/src/index.js"],"names":["React","ReactDOM","throwStatement","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","status","Game","constructor","state","history","Array","fill","xIsNext","handleClick","current","length","slice","calcuateWinner","setState","concat","winner","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { throwStatement } from '@babel/types';\n// class Square extends React.Component {\n//     constructor(props){\n//         super(props);\n//     }\n//     render() {\n//       return (\n//         //  <button className=\"square\" onClick={function(){alert( \"click\"+this.props.value );}}> \n//         //  </button>\n//         // fucntion과 화살표함수의 this가 다르다 \n//         <button \n//         className=\"square\" \n//         onClick={() => {this.props.onClick()}}\n//         >\n//           {this.props.value}\n//         </button>\n//       );\n//     }\n//   }\n\n//function component로 바꾸기\n//state를 가질 필요가 없는 component는 function으로 정의하면 훨씬 간결하다.\n  function Square(props){\n      return(\n          <button \n          className=\"square\"\n            onClick={props.onClick}\n            >\n                {props.value}\n            </button>\n      );\n  }\n\n  class Board extends React.Component {\n      \n    renderSquare(i) {\n      return <Square \n      value={this.props.squares[i]}\n      onClick={()=>this.props.onClick(i)}\n      />;\n    }\n    render() {\n    \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props){\n      super(props);\n      this.state={\n        history:[{\n          squares:Array(9).fill(null),\n        }],\n        xIsNext:true,\n      }\n    }\n\n    handleClick(i){\n      const history=this.state.history;\n      const current=this.state.history[history.length-1];\n      const squares=current.squares.slice();\n      if(calcuateWinner(squares)||squares[i]){\n          return;\n      }\n      squares[i]=this.state.xIsNext?'X':'O';\n      this.setState({\n        history: history.concat([{\n          squares:squares,\n        }]),\n        xIsNext:!this.state.xIsNext,\n      });\n    }\n    render() {\n      const history=this.state.history;\n      const current=this.state.history[history.length-1];\n      const winner = calcuateWinner(current.squares);\n      let status;\n      if(winner){\n        status='Winner : '+winner;\n      }else{\n        status='Next player : '+(this.state.xIsNext?'X':'O');\n      }\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board squares={current.squares} onClick={i=>this.handleClick(i)}/>\n          </div>\n          <div className=\"game-info\">\n            <div>{ status }</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  function calcuateWinner(squares){\n      const lines=[\n          [0,1,2],\n          [3,4,5],\n          [6,7,8],\n          [0,3,6],\n          [1,4,7],\n          [2,5,8],\n          [0,4,8],\n          [2,4,6],\n      ];\n      for(let i=0;i<lines.length;i++){\n          const[a,b,c]=lines[i];\n          if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){\n              return squares[a];\n          }\n      }\n      return null;\n  }\n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}